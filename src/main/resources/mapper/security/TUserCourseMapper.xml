<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.security.mapper.TUserCourseMapper">
    
    <resultMap type="com.project.security.domain.TUserCourse" id="TUserCourseResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="startDate"    column="start_date"    />
        <result property="courseId"    column="course_id"    />
        <result property="status"    column="status"    />
        <result property="classHour"    column="class_hour"    />
        <result property="progress"    column="progress"    />
        <result property="isCollect"    column="is_collect"    />
        <result property="addUserId"    column="add_user_id"    />
        <result property="publishDate"    column="publish_date"    />
        <result property="updateDate"    column="update_date"    />
        <result property="updateUserId"    column="update_user_id"    />
    </resultMap>
	
	<sql id="selectTUserCoursebasicColums">
        select uc.id, uc.user_id, uc.start_date, uc.course_id, uc.status, uc.class_hour, uc.progress, uc.is_collect, uc.add_user_id, uc.publish_date, uc.update_date, uc.update_user_id    </sql>
	
    <select id="selectTUserCourseList" parameterType="com.project.security.domain.TUserCourse" resultMap="TUserCourseResult">
        <include refid="selectTUserCoursebasicColums"/>
        from t_user_course uc
        <where>  
            <if test="id != null  and id != '' "> and uc.id = #{id}</if>
             <if test="userId != null  and userId != '' "> and uc.user_id = #{userId}</if>
             <if test="startDate != null "> and uc.start_date = #{startDate}</if>
             <if test="courseId != null  and courseId != '' "> and uc.course_id = #{courseId}</if>
             <if test="status != null  and status != '' "> and uc.status = #{status}</if>
             <if test="classHour != null "> and uc.class_hour = #{classHour}</if>
             <if test="progress != null "> and uc.progress = #{progress}</if>
             <if test="isCollect != null  and isCollect != '' "> and uc.is_collect = #{isCollect}</if>
             <if test="addUserId != null  and addUserId != '' "> and uc.add_user_id = #{addUserId}</if>
             <if test="publishDate != null "> and uc.publish_date = #{publishDate}</if>
             <if test="updateDate != null "> and uc.update_date = #{updateDate}</if>
             <if test="updateUserId != null  and updateUserId != '' "> and uc.update_user_id = #{updateUserId}</if>
         </where>
    </select>
    
    <select id="selectTUserCourseById" parameterType="String" resultMap="TUserCourseResult">
        <include refid="selectTUserCoursebasicColums"/>
        from t_user_course uc
        where uc.id = #{id}
    </select>
        
    <insert id="insertTUserCourse" parameterType="com.project.security.domain.TUserCourse">
        insert into t_user_course
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null  and id != ''  ">id,</if>
			<if test="userId != null  and userId != ''  ">user_id,</if>
			<if test="startDate != null  ">start_date,</if>
			<if test="courseId != null  and courseId != ''  ">course_id,</if>
			<if test="status != null  and status != ''  ">status,</if>
			<if test="classHour != null  ">class_hour,</if>
			<if test="progress != null  ">progress,</if>
			<if test="isCollect != null  and isCollect != ''  ">is_collect,</if>
			<if test="addUserId != null  and addUserId != ''  ">add_user_id,</if>
			<if test="publishDate != null  ">publish_date,</if>
			<if test="updateDate != null  ">update_date,</if>
			<if test="updateUserId != null  and updateUserId != ''  ">update_user_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null  and id != ''  ">#{id},</if>
			<if test="userId != null  and userId != ''  ">#{userId},</if>
			<if test="startDate != null  ">#{startDate},</if>
			<if test="courseId != null  and courseId != ''  ">#{courseId},</if>
			<if test="status != null  and status != ''  ">#{status},</if>
			<if test="classHour != null  ">#{classHour},</if>
			<if test="progress != null  ">#{progress},</if>
			<if test="isCollect != null  and isCollect != ''  ">#{isCollect},</if>
			<if test="addUserId != null  and addUserId != ''  ">#{addUserId},</if>
			<if test="publishDate != null  ">#{publishDate},</if>
			<if test="updateDate != null  ">#{updateDate},</if>
			<if test="updateUserId != null  and updateUserId != ''  ">#{updateUserId},</if>
         </trim>
    </insert>
	 
    <update id="updateTUserCourse" parameterType="com.project.security.domain.TUserCourse">
        update t_user_course
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null  and userId != ''  ">user_id = #{userId},</if>
            <if test="startDate != null  ">start_date = #{startDate},</if>
            <if test="courseId != null  and courseId != ''  ">course_id = #{courseId},</if>
            <if test="status != null  and status != ''  ">status = #{status},</if>
            <if test="classHour != null  ">class_hour = #{classHour},</if>
            <if test="progress != null  ">progress = #{progress},</if>
            <if test="isCollect != null  and isCollect != ''  ">is_collect = #{isCollect},</if>
            <if test="addUserId != null  and addUserId != ''  ">add_user_id = #{addUserId},</if>
            <if test="publishDate != null  ">publish_date = #{publishDate},</if>
            <if test="updateDate != null  ">update_date = #{updateDate},</if>
            <if test="updateUserId != null  and updateUserId != ''  ">update_user_id = #{updateUserId},</if>
        </trim>
        where id = #{id}
    </update>

	<delete id="deleteTUserCourseById" parameterType="String">
        delete from t_user_course where id = #{id}
    </delete>
	
    <delete id="deleteTUserCourseByIds" parameterType="String">
        delete from t_user_course where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <!-- 以上是自动生成的代码尽量别动 -->
    <resultMap type="com.project.security.domain.vo.TUserCourseVo" id="TUserCourseVoResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
        <result property="deptId"    column="dept_id"    />
        <result property="deptName"    column="dept_name"    />
        <result property="progress"    column="progress"    />
        <result property="proSum"    column="proSum"    />
        <result property="rank"    column="rank"    />
    </resultMap>
    
    <update id="updateTUserCourseByUser" parameterType="com.project.security.domain.TUserCourse">
        update t_user_course
        <trim prefix="SET" suffixOverrides=",">
            <if test="startDate != null  ">start_date = #{startDate},</if>
            <if test="status != null  and status != ''  ">status = #{status},</if>
            <if test="classHour != null  ">class_hour = #{classHour},</if>
            <if test="progress != null  ">progress = #{progress},</if>
            <if test="isCollect != null  and isCollect != ''  ">is_collect = #{isCollect},</if>
            <if test="addUserId != null  and addUserId != ''  ">add_user_id = #{addUserId},</if>
            <if test="publishDate != null  ">publish_date = #{publishDate},</if>
            <if test="updateDate != null  ">update_date = #{updateDate},</if>
            <if test="updateUserId != null  and updateUserId != ''  ">update_user_id = #{updateUserId},</if>
        </trim>
        where user_id = #{userId} and course_id = #{courseId}
    </update>
    
    <select id="courseRanking" parameterType="java.lang.String" resultMap="TUserCourseVoResult">
    	select u.user_id,u.user_name,d.dept_id,d.dept_name,uc.progress
		from t_user_course uc 
		join sys_user u on uc.user_id = u.user_id
		join sys_dept d on d.dept_id = u.dept_id
		where uc.user_id = #{userId}
		order by uc.progress desc
    </select>
    
    <select id="courseRankingByUserId" parameterType="java.util.Map" resultMap="TUserCourseVoResult">
    	SELECT a.user_id,a.proSum,
		(SELECT count(DISTINCT proSum) FROM (select uc.user_id,sum(uc.progress) proSum
		from t_user_course uc 
		join sys_user u on uc.user_id = u.user_id
		where u.business_id = #{businessId}
		group by uc.user_id) b WHERE b.proSum > a.proSum)+1 rank
		FROM (select uc.user_id,sum(uc.progress) proSum
		from t_user_course uc 
		join sys_user u on uc.user_id = u.user_id
		where u.business_id = #{businessId}
		group by uc.user_id) a 
		where a.user_id = #{userId}
    </select>
</mapper>