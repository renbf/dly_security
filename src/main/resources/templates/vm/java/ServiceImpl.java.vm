package ${package}.service.impl;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import java.util.List;
import java.util.Date;
import com.project.framework.util.ShiroUtils;
import com.project.util.UUIDUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;
import ${package}.mapper.${className}Mapper;
import ${package}.domian.${className};
import ${package}.service.I${className}Service;
import com.project.common.support.Convert;

/**
 * ${tableComment} 服务层实现
 * 
 * @author ${author}
 * @date ${datetime}
 */
@Service
public class ${className}ServiceImpl implements I${className}Service 
{
	private static final Logger log = LoggerFactory.getLogger(${className}ServiceImpl.class);
	@Autowired
	@Qualifier("${classname}Mapper")
	private ${className}Mapper ${classname}Mapper;

	/**
     * 查询${tableComment}信息
     * 
     * @param ${primaryKey.attrname} ${tableComment}ID
     * @return ${tableComment}信息
     */
    @Override
	public ${className} select${className}ById(${primaryKey.attrType} ${primaryKey.attrname})
	{
	    return ${classname}Mapper.select${className}ById(${primaryKey.attrname});
	}
	
	/**
     * 查询${tableComment}列表
     * 
     * @param ${classname} ${tableComment}信息
     * @return ${tableComment}集合
     */
	@Override
	public List<${className}> select${className}List(${className} ${classname})
	{
	    return ${classname}Mapper.select${className}List(${classname});
	}
	
    /**
     * 新增${tableComment}
     * 
     * @param ${classname} ${tableComment}信息
     * @return 结果
     */
	@Override
	public int insert${className}(${className} ${classname})
	{
		${classname}.setId(UUIDUtil.getUUID());
		${classname}.setCreateDate(new Date());
		${classname}.setAddUserId(ShiroUtils.getUserId().toString());
	    return ${classname}Mapper.insert${className}(${classname});
	}
	
	/**
     * 修改${tableComment}
     * 
     * @param ${classname} ${tableComment}信息
     * @return 结果
     */
	@Override
	public int update${className}(${className} ${classname})
	{
	    return ${classname}Mapper.update${className}(${classname});
	}

	/**
     * 删除${tableComment}对象
     * 
     * @param ids 需要删除的数据ID
     * @return 结果
     */
	@Override
	public int delete${className}ByIds(String ids)
	{
		return ${classname}Mapper.delete${className}ByIds(Convert.toStrArray(ids));
	}
	//以上自动生成的尽量别动
}
